Problem ID,Thinking,Coding,LeetCode Tags,Tags,Runtime,Space,Notes
count-substrings-that-satisfy-k-constraint-i,5,5,"String,Sliding Window","","N,N is the length of the array",1,
lucky-numbers-in-a-matrix,5,2,"Array,Matrix","","N*M,N and M are the number of rows and columns of the matrix","N*M",
percentage-of-letter-in-string,1,2,"String","",1,1,
rearrange-characters-to-make-target-string,2,2,"Hash Table,String,Counting","","N+M,N is the length of s,M is the length of target",1,
split-the-array,2,2,"Array,Hash Table,Counting","Parity","N,N is the length of the array","N,N is the length of the array",
divide-an-array-into-subarrays-with-minimum-cost-i,2,2,"Array,Sorting,Enumeration","","N,N is the length of the array",1,
longest-common-prefix,1,2,"String,Trie","","N*M,N is the number of strings,M is the average length of the shortest string","P,P is the length of the prefix",
alternating-digit-sum,1,2,"Math","","log(N)",1,
pascals-triangle,2,5,"Array,Dynamic Programming","",N^2,N^2,
count-integers-with-even-digit-sum,5,5,"Math,Simulation","",log(N),1,
lowest-common-ancestor-of-a-binary-tree,2,10,"Tree,Depth-First Search,Binary Tree","","D,D is the depth of the tree","N,N is the number of nodes in the tree",
maximum-product-after-k-increments,2,2,"Array,Greedy,Heap (Priority Queue)","","K*log(N),N is the length of the array",N,
number-of-ways-to-select-buildings,5,5,"String,Dynamic Programming,Prefix Sum","Markov Model","N,N is the length of the array",1,
kth-missing-positive-number,15,10,"Array,Binary Search","","log(N),N is the length of the array",1,
shortest-subarray-with-sum-at-least-k,15,10,"Array,Binary Search,Queue,Sliding Window,Heap (Priority Queue),Prefix Sum,Monotonic Queue","","N,N is the length of the array","N",
special-array-ii,5,10,"Array,Binary Search,Prefix Sum","","N+Q*log(N),N is the length of the array,Q is the number of queries","N",
knight-dialer,5,15,"Dynamic Programming","Markov Model","log(N),N is the length of the array",1,"There is inflated time on the Coding score because of the need to code your own matrix power and matrix multiplication with modulos. Otherwise, the score would be 5."
number-of-ways-to-paint-n-3-grid,5,15,"Dynamic Programming","Markov Model","log(N)",1,"There is inflated time on the Coding score because of the need to code your own matrix power and matrix multiplication with modulos. Otherwise, the score would be 5."
reverse-prefix-of-word,1,2,"Two Pointers,String,Stack","","N,N is the length of the word",N,
check-if-one-string-swap-can-make-strings-equal,1,2,"Hash Table,String,Counting","","N,N is the length of the smaller word",1,
make-string-a-subsequence-using-cyclic-increments,1,2,"Two Pointers,String","","N,N is the length of str1",1,
minimum-difference-in-sums-after-removal-of-elements,15,10,"Array,Dynamic Programming,Heap (Priority Queue)","",N*log(N),N,
number-of-ways-to-form-a-target-string-given-a-dictionary,2,10,"Array,String,Dynamic Programming","","M(N+K),N is the number of words,M is the length of each word,K is the length of target",K,
two-best-non-overlapping-events,5,5,"Array,Binary Search,Dynamic Programming,Sorting,Heap (Priority Queue)","","N*log(N),N is the number of events",N,
copy-list-with-random-pointer,1,5,"Hash Table,Linked List","","N,N is the number of nodes in the list",N,
max-dot-product-of-two-subsequences,5,10,"Array,Dynamic Programming","","N*M,N is the length of nums1,M is the length of nums2","min(N, M)",
